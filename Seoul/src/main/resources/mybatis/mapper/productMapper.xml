<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.admin.mapper.ManagerProductMapper">

    <select id="productSeq" resultType="long">
        SELECT mProduct_seq.NEXTVAL FROM dual
    </select>

    <select id="optionSeq" resultType="long">
        SELECT productOption_seq.NEXTVAL FROM dual
    </select>

    <select id="detailSeq" resultType="long">
        SELECT optionDetail_seq.NEXTVAL FROM dual
    </select>

    <insert id="insertProduct" parameterType="com.sp.app.admin.model.ManagerProduct">
        INSERT INTO manager_product (
            product_num, category_num, product_name,
            price, delivery, content, thumbnail,
            product_show, orderby_category,
            reg_date, update_date, product_state
        ) VALUES (
            #{productNum}, #{categoryNum}, #{productName}, 
            #{price}, #{delivery}, #{content}, #{thumbnail},
            #{productShow}, 1,
            SYSDATE, SYSDATE, #{productState, jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertProductFile" parameterType="com.sp.app.admin.model.ManagerProduct">
        INSERT INTO manager_pFile (file_num, product_num, filename, filesize)
        VALUES (productFile_seq.NEXTVAL, #{productNum}, #{filename}, #{filesize})
    </insert>

    <insert id="insertProductOption" parameterType="com.sp.app.admin.model.ManagerProduct">
        INSERT INTO manager_pOption (option_num, option_name, product_num, parent_option)
        VALUES (#{optionNum}, #{optionName}, #{productNum}, #{parentOption})
    </insert>

    <insert id="insertOptionDetail" parameterType="com.sp.app.admin.model.ManagerProduct">
        INSERT INTO manager_optionDetail (detail_num, option_num, option_value)
        VALUES (#{detailNum}, #{optionNum}, #{optionValue})
    </insert>

    <select id="findByCategory" parameterType="long" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        category_num   categoryNum,
	        category_name  categoryName,
	        use,
	        display_no,
	        parent_num     parentNum
	    FROM manager_pCategory
	    WHERE category_num = #{value}
	</select>

	<select id="listCategory" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        category_num   categoryNum,
	        category_name  categoryName,
	        use,
	        display_no,
	        parent_num     parentNum
	    FROM manager_pCategory
	    WHERE use = 1 AND parent_num IS NULL
	    ORDER BY display_no
	</select>

    <select id="listSubCategory" parameterType="long" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        category_num   categoryNum,
	        category_name  categoryName,
	        use,
	        display_no,
	        parent_num     parentNum
	    FROM manager_pCategory
	    WHERE use = 1 AND parent_num = #{value}
	    ORDER BY display_no
	</select>

    <sql id="repeated">
        <if test="schType == 'all'">
            <![CDATA[
                (
                    INSTR(p.product_name, #{kwd}) > 0
                    OR DBMS_LOB.INSTR(REGEXP_REPLACE(p.content, '<[^>]+>', ''), #{kwd}) > 0
                )
            ]]>
        </if>
        <if test="schType == 'productNum'">
            INSTR(TO_CHAR(p.product_num), #{kwd}) = 1
        </if>
        <if test="schType == 'productName'">
            INSTR(p.product_name, #{kwd}) > 0
        </if>
        <if test="schType == 'content'">
            <![CDATA[
                DBMS_LOB.INSTR(REGEXP_REPLACE(p.content, '<[^>]+>', ''), #{kwd}) > 0
            ]]>
        </if>
    </sql>

    <select id="dataCount" parameterType="map" resultType="int">
	    SELECT NVL(COUNT(*), 0)
	    FROM manager_product p
	    <where>
	        <if test="parentNum != null and parentNum != '' and parentNum != 0">
	            AND p.category_num IN (
	                SELECT category_num FROM manager_pCategory WHERE parent_num = #{parentNum}
	            )
	        </if>
	        
	        <if test="parentNum == null and categoryNum != null and categoryNum != 0 and categoryNum != ''">
	            AND p.category_num = #{categoryNum}
	        </if>
	        
	        <if test="productShow != null and productShow != -1">
	            AND p.product_show = #{productShow}
	        </if>
	        
	        <if test="productState != null and productState != ''">
	            AND p.product_state = #{productState}
	        </if>
	        
	        <if test="kwd != null and kwd != ''">
	            AND <include refid="repeated"/>
	        </if>
	    </where>
	</select>

    <select id="listProduct" parameterType="map" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT 
	        p.product_num productNum,
	        p.category_num categoryNum,
	        p.product_name productName,
	        p.price,
	        p.thumbnail,
	        p.product_show productShow,
	        p.reg_date regDate,
	        TO_CHAR(p.update_date, 'YYYY-MM-DD') updateDate,
	        NVL(s.total_stock, 0) totalStock
	    FROM manager_product p
	    LEFT OUTER JOIN (
	        SELECT 
	            product_num, 
	            NVL(SUM(total_stock), 0) total_stock
	        FROM manager_pStock
	        GROUP BY product_num
	    ) s ON p.product_num = s.product_num
	    <where>
	        <if test="parentNum != null and parentNum != '' and parentNum != 0">
	            AND p.category_num IN (
	                SELECT category_num FROM manager_pCategory WHERE parent_num = #{parentNum}
	            )
	        </if>
	        
	        <if test="parentNum == null and categoryNum != null and categoryNum != 0 and categoryNum != ''">
	            AND p.category_num = #{categoryNum}
	        </if>
	
	        <if test="productShow != null and productShow != -1">
	            AND p.product_show = #{productShow}
	        </if>
	        
	        <if test="productState != null and productState != ''">
	            AND p.product_state = #{productState}
	        </if>
	        
	        <if test="kwd != null and kwd != ''">
	            AND <include refid="repeated"/>
	        </if>
	    </where>
	    ORDER BY p.product_num DESC
	    OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	

    <select id="findById" parameterType="long" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        p.product_num           productNum,
	        p.category_num          categoryNum,
	        p.product_name          productName,
	        p.price,
	        p.delivery,
	        p.content,
	        p.thumbnail,
	        p.product_show          productShow,
	        p.orderby_category      orderbyCategory,
	        p.product_state         productState,
	        p.reg_date              regDate,
	        TO_CHAR(p.update_date, 'YYYY-MM-DD') updateDate,
	        NVL(s.total_stock, 0)   totalStock
	    FROM manager_product p
	    LEFT OUTER JOIN (
	        SELECT product_num, NVL(SUM(total_stock), 0) total_stock
	        FROM manager_pStock
	        GROUP BY product_num
	    ) s ON p.product_num = s.product_num
	    WHERE p.product_num = #{value}
	</select>

    <select id="listProductFile" parameterType="long" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        file_num    fileNum,
	        product_num productNum,
	        filename,
	        filesize
	    FROM manager_pFile
	    WHERE product_num = #{value}
	</select>

    <select id="listProductOption" parameterType="long" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        option_num     optionNum,
	        option_name    optionName,
	        parent_option  parentOption,
	        product_num    productNum
	    FROM manager_pOption
	    WHERE product_num = #{value}
	    ORDER BY parent_option NULLS FIRST, option_num
	</select>

    <select id="listOptionDetail" parameterType="long" resultType="com.sp.app.admin.model.ManagerProduct">
	    SELECT
	        detail_num    detailNum,
	        option_num    optionNum,
	        option_value  optionValue
	    FROM manager_optionDetail
	    WHERE option_num = #{value}
	    ORDER BY detail_num
	</select>

    <update id="updateProduct" parameterType="com.sp.app.admin.model.ManagerProduct">
        UPDATE manager_product
        SET category_num    = #{categoryNum},
            product_name    = #{productName},
            price           = #{price},
            delivery        = #{delivery},
            content         = #{content},
            product_show    = #{productShow},
            orderby_category= #{orderbyCategory},
            update_date     = SYSDATE,
            product_state   = #{productState}
            <if test="thumbnail != null and thumbnail != ''">
                , thumbnail = #{thumbnail}
            </if>
        WHERE product_num = #{productNum}
    </update>

    <update id="updateProductDisplayOrder" parameterType="map">
        UPDATE manager_product
        SET orderby_category = #{orderbyCategory},
            product_show     = #{productShow},
            update_date      = SYSDATE
        WHERE product_num = #{productNum}
    </update>

    <delete id="deleteProduct" parameterType="long">
        DELETE FROM manager_product
        WHERE product_num = #{value}
    </delete>

    <delete id="deleteProductFile" parameterType="long">
        DELETE FROM manager_pFile
        WHERE file_num = #{value}
    </delete>

    <update id="updateProductOption" parameterType="com.sp.app.admin.model.ManagerProduct">
        UPDATE manager_pOption
        SET option_name = #{optionName}
        WHERE option_num = #{optionNum}
    </update>

    <delete id="deleteProductOption" parameterType="long">
        DELETE FROM manager_pOption
        WHERE option_num = #{value}
    </delete>

    <update id="updateOptionDetail" parameterType="com.sp.app.admin.model.ManagerProduct">
        UPDATE manager_optionDetail
        SET option_value = #{optionValue}
        WHERE detail_num = #{detailNum}
    </update>

    <delete id="deleteOptionDetail" parameterType="long">
        DELETE FROM manager_optionDetail
        WHERE detail_num = #{value}
    </delete>

    <insert id="insertProductStock" parameterType="com.sp.app.admin.model.ManagerProductStock">
        INSERT INTO manager_pStock (stock_num, product_num, detail_num, total_stock)
        VALUES (productStock_seq.NEXTVAL, #{product_num}, #{detail_num}, #{total_stock})
    </insert>

    <update id="updateProductStock" parameterType="com.sp.app.admin.model.ManagerProductStock">
        UPDATE manager_pStock
        SET total_stock = #{total_stock}
        WHERE stock_num = #{stock_num}
    </update>

	<select id="listProductStock" parameterType="map" resultType="com.sp.app.admin.model.ManagerProductStock">
	    SELECT
	        p.product_num,
	        p.product_name,
	        o.option_num,
	        o.option_name,
	        d.detail_num,
	        d.option_value,
	        s.stock_num,
	        NVL(s.total_stock, 0) total_stock
	    FROM manager_product p
	    LEFT OUTER JOIN manager_pOption o  ON p.product_num = o.product_num
	    LEFT OUTER JOIN manager_optionDetail d ON o.option_num = d.option_num
	    LEFT OUTER JOIN manager_pStock s ON d.detail_num = s.detail_num
	    WHERE p.product_num = #{productNum}
	    ORDER BY d.detail_num
	</select>
</mapper>